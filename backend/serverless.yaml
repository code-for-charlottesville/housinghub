# serverless.yml


service: serverless-flask


plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-plugin-scripts


custom:
  wsgi:
    app: src/server.app
    packRequirements: false
  pythonRequirements:
    slim: true
    dockerizePip: true
    dockerFile: ./Dockerfile.deploy
  scripts:
    hooks:
      'deploy:finalize': sls invoke -f migration --stage ${self:provider.stage}


provider:
  name: aws
  runtime: python3.6
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  role: housinghubLambdaExecutionRole

package:
  individually: true

functions:
  api:
    handler: wsgi_handler.handler
    environment:
      APP_ENV: ${self:provider.stage}
      DB_CLUSTER_ARN:
        !Join
          - ''
          -
            - 'arn:aws:rds:us-east-1:130004658718:cluster:'
            - !Ref housinghubDb
      DB_SECRET_ARN: !Join ['', [!Ref housinghubDbSecret]]
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  migration:
    handler: handler.main
    module: alembic
    environment:
      APP_ENV: ${self:provider.stage}
      DB_CLUSTER_ARN:
        !Join
          - ''
          -
            - 'arn:aws:rds:us-east-1:130004658718:cluster:'
            - !Ref housinghubDb
      DB_SECRET_ARN: !Join ['', [!Ref housinghubDbSecret]]

resources:
  Resources:
    housinghubDb:
      Type: AWS::RDS::DBCluster
      Properties:
        MasterUsername: admin
        MasterUserPassword: pa55w0rd
        DatabaseName: housinghub${self:provider.stage}
        Engine: aurora
        EngineMode: serverless
        EnableHttpEndpoint: true
        ScalingConfiguration:
          AutoPause: true
          MaxCapacity: 16
          MinCapacity: 2
          SecondsUntilAutoPause: 500
    housinghubDbSecret:
      Type: 'AWS::SecretsManager::Secret'
      Properties:
        Name: housinghub-${self:provider.stage}-db-secret
        Description: This contains the RDS Master user credentials for RDS Aurora Serverless Cluster
        SecretString:
          |
          {
            "username": "admin",
            "password": "p@ssw0rd"
          }
    housinghubLambdaExecutionRole:
      Type: "AWS::IAM::Role"
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: "/"
        Policies:
          - PolicyName: "LambdaToCloudWatchLogs"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "logs:*"
                  Resource:
                    - arn:aws:logs:*:*:*
          - PolicyName: "LambdaToRDSAuroraServerless"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "rds-data:DeleteItems"
                    - "rds-data:ExecuteSql"
                    - "rds-data:GetItems"
                    - "rds-data:InsertItems"
                    - "rds-data:UpdateItems"
                    - "rds-data:BeginTransaction"
                    - "rds-data:CommitTransaction"
                    - "rds-data:RollbackTransaction"
                    - "rds-data:BatchExecuteStatement"
                  Resource:
                    - !Join ['', ['arn:aws:rds:*:*:cluster:', !Ref housinghubDb]]
                    - !Join ['', ['arn:aws:rds:*:*:cluster:', !Ref housinghubDb, ':*']]
          - PolicyName: "LambdaToAWSSecrets"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action: "secretsmanager:GetSecretValue"
                  Resource:
                    - !Join ['', [!Ref housinghubDbSecret]]
                    - !Join ['', [!Ref housinghubDbSecret, ':*']]