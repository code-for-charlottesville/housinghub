{"version":3,"sources":["../../../src/components/message/message.js"],"names":["colors","concat","Object","keys","CONSTANTS","COLORS","map","key","Message","children","className","color","size","props","Body","MessageBody","Header","MessageHeader","propTypes","modifiers","PropTypes","node","string","style","shape","renderAs","renderAsShape","oneOf","defaultProps","undefined"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG,CAAC,IAAD,EAAOC,MAAP,CACbC,MAAM,CAACC,IAAP,CAAYC,sBAAUC,MAAtB,EAA8BC,GAA9B,CAAkC,UAAAC,GAAG;AAAA,SAAIH,sBAAUC,MAAV,CAAiBE,GAAjB,CAAJ;AAAA,CAArC,CADa,CAAf;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,SAAb,QAAaA,SAAb;AAAA,MAAwBC,KAAxB,QAAwBA,KAAxB;AAAA,MAA+BC,IAA/B,QAA+BA,IAA/B;AAAA,MAAwCC,KAAxC;;AAAA,SACd,gCAAC,mBAAD,eACMA,KADN;AAEE,IAAA,SAAS,EAAE,6BAAW,SAAX,EAAsBH,SAAtB,+DACFC,KADE,GACQA,KADR,6CAEFC,IAFE,GAEOA,IAFP;AAFb,MAOGH,QAPH,CADc;AAAA,CAAhB;;AAYAD,OAAO,CAACM,IAAR,GAAeC,gBAAf;AAEAP,OAAO,CAACQ,MAAR,GAAiBC,kBAAjB;AAEAT,OAAO,CAACU,SAAR,qBACKC,sBAAUD,SADf;AAEET,EAAAA,QAAQ,EAAEW,sBAAUC,IAFtB;AAGEX,EAAAA,SAAS,EAAEU,sBAAUE,MAHvB;AAIEC,EAAAA,KAAK,EAAEH,sBAAUI,KAAV,CAAgB,EAAhB,CAJT;AAKEC,EAAAA,QAAQ,EAAEC,oBALZ;AAMEd,EAAAA,IAAI,EAAEQ,sBAAUO,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CANR;AAOEhB,EAAAA,KAAK,EAAES,sBAAUO,KAAV,CAAgB3B,MAAhB;AAPT;AAUAQ,OAAO,CAACoB,YAAR,qBACKT,sBAAUS,YADf;AAEEnB,EAAAA,QAAQ,EAAE,IAFZ;AAGEC,EAAAA,SAAS,EAAEmB,SAHb;AAIEN,EAAAA,KAAK,EAAEM,SAJT;AAKEJ,EAAAA,QAAQ,EAAE,SALZ;AAMEd,EAAAA,KAAK,EAAEkB,SANT;AAOEjB,EAAAA,IAAI,EAAEiB;AAPR;eAUerB,O","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CONSTANTS from '../../constants';\n\nimport MessageBody from './components/body';\nimport MessageHeader from './components/header';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\nimport renderAsShape from '../../modifiers/render-as';\n\nconst colors = [null].concat(\n  Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]),\n);\n\nconst Message = ({ children, className, color, size, ...props }) => (\n  <Element\n    {...props}\n    className={classnames('message', className, {\n      [`is-${color}`]: color,\n      [`is-${size}`]: size,\n    })}\n  >\n    {children}\n  </Element>\n);\n\nMessage.Body = MessageBody;\n\nMessage.Header = MessageHeader;\n\nMessage.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  renderAs: renderAsShape,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  color: PropTypes.oneOf(colors),\n};\n\nMessage.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: undefined,\n  style: undefined,\n  renderAs: 'article',\n  color: undefined,\n  size: undefined,\n};\n\nexport default Message;\n"],"file":"message.js"}