{"version":3,"sources":["../../../src/components/form/form.story.js"],"names":["HoC","Component","Controlled","value","evt","setState","target","onChange","state","props","React","HoCCheckbox","checked","RadioGroup","selected","undefined","SelectControlled","Select","CheckboxControlled","Checkbox","module","addDecorator","story","margin","add","MultiInputHandler","email","name","password","comment","gender","question","termsAccepted","type","JSON","stringify","PureComponent"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { storiesOf } from '@storybook/react';\n\nimport {\n  Field,\n  Control,\n  Label,\n  Input,\n  Textarea,\n  Select,\n  Checkbox,\n  Radio,\n  Help,\n  InputFile,\n} from 'react-bulma-components/lib/components/form';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Icon from 'react-bulma-components/lib/components/icon';\n\n/* eslint-disable react/no-multi-comp */\nconst HoC = Component => {\n  class Controlled extends React.Component {\n    static displayName = 'Select';\n\n    state = {\n      value: '',\n    };\n\n    onChange = evt => {\n      this.setState({\n        value: evt.target.value,\n      });\n    };\n\n    render() {\n      return (\n        <Component\n          onChange={this.onChange}\n          value={this.state.value}\n          {...this.props}\n        />\n      );\n    }\n  }\n  return Controlled;\n};\n\nconst HoCCheckbox = Component => {\n  class Controlled extends React.Component {\n    static displayName = 'Checkbox';\n    state = {\n      checked: false,\n    };\n\n    onChange = evt => {\n      this.setState({\n        checked: evt.target.checked,\n      });\n    };\n\n    render() {\n      return (\n        <Component\n          onChange={this.onChange}\n          checked={this.state.checked}\n          {...this.props}\n        />\n      );\n    }\n  }\n  return Controlled;\n};\n\nclass RadioGroup extends React.Component {\n  state = {\n    selected: undefined,\n  };\n\n  onChange = evt => {\n    this.setState({\n      selected: evt.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <Control>\n        <Radio\n          onChange={this.onChange}\n          checked={this.state.selected === 'Yes'}\n          value=\"Yes\"\n          name=\"question\"\n        >\n          Yes\n        </Radio>\n        <Radio\n          onChange={this.onChange}\n          checked={this.state.selected === 'No'}\n          value=\"No\"\n          name=\"question\"\n        >\n          No\n        </Radio>\n      </Control>\n    );\n  }\n}\n/* eslint-enable react/no-multi-comp */\nconst SelectControlled = HoC(Select);\nconst CheckboxControlled = HoCCheckbox(Checkbox);\n\nstoriesOf('Form', module)\n  .addDecorator(story => <div style={{ margin: 50 }}>{story()}</div>)\n  .add('Default', () => (\n    <div>\n      <Field>\n        <Label>Name</Label>\n        <Control>\n          <Input placeholder=\"Text input\" />\n        </Control>\n      </Field>\n\n      <Field>\n        <Label>Username</Label>\n        <Control>\n          <Input\n            color=\"success\"\n            type=\"text\"\n            placeholder=\"Text input\"\n            value=\"bulma\"\n          />\n        </Control>\n        <Help color=\"success\">This username is available</Help>\n      </Field>\n\n      <Field>\n        <Label>Email</Label>\n        <Control>\n          <Input\n            color=\"danger\"\n            type=\"email\"\n            placeholder=\"Email input\"\n            value=\"hello@\"\n          />\n        </Control>\n        <Help color=\"danger\">This email is invalid</Help>\n      </Field>\n      <Field>\n        <Label>With Icons</Label>\n        <Control iconLeft iconRight>\n          <Input color=\"success\" type=\"email\" placeholder=\"I have icons\" />\n          <Icon align=\"left\" icon=\"bars\" />\n          <Icon align=\"right\" icon=\"bars\" />\n        </Control>\n        <Help color=\"danger\">This email is invalid</Help>\n      </Field>\n      <Field>\n        <Label>Subject</Label>\n        <Control>\n          <SelectControlled>\n            <option>Select dropdown</option>\n            <option>With options</option>\n          </SelectControlled>\n        </Control>\n      </Field>\n\n      <Field>\n        <Label>Message</Label>\n        <Control>\n          <Textarea placeholder=\"Textarea\" />\n        </Control>\n      </Field>\n\n      <Field>\n        <Label>File</Label>\n        <Control>\n          <InputFile\n            icon={<Icon icon=\"upload\" />}\n            boxed\n            placeholder=\"Textarea\"\n          />\n        </Control>\n      </Field>\n\n      <Field>\n        <Control>\n          <CheckboxControlled>\n            I agree to the <a href=\"#agree\">terms and conditions</a>\n          </CheckboxControlled>\n        </Control>\n      </Field>\n\n      <Field>\n        <RadioGroup />\n      </Field>\n\n      <Field kind=\"group\">\n        <Control>\n          <Button type=\"primary\">Submit</Button>\n        </Control>\n        <Control>\n          <Button color=\"link\">Cancel</Button>\n        </Control>\n      </Field>\n    </div>\n  ))\n  .add('Handle Multiple inputs', () => {\n    /* eslint-disable react/no-multi-comp */\n    class MultiInputHandler extends PureComponent {\n      state = {\n        email: '',\n        name: '',\n        password: '',\n        comment: '',\n        gender: '',\n        question: undefined,\n        termsAccepted: false,\n      };\n\n      onChange = evt => {\n        const value =\n          evt.target.type === 'checkbox'\n            ? evt.target.checked\n            : evt.target.value;\n        this.setState({\n          [evt.target.name]: value,\n        });\n      };\n\n      render() {\n        const {\n          email,\n          name,\n          password,\n          comment,\n          gender,\n          question,\n          termsAccepted,\n        } = this.state;\n        return (\n          <div>\n            <Field>\n              <Label>Email</Label>\n              <Control>\n                <Input\n                  onChange={this.onChange}\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Email input\"\n                  value={email}\n                />\n              </Control>\n            </Field>\n            <Field>\n              <Label>Name</Label>\n              <Control>\n                <Input\n                  onChange={this.onChange}\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Name input\"\n                  value={name}\n                />\n              </Control>\n            </Field>\n            <Field>\n              <Label>Password</Label>\n              <Control>\n                <Input\n                  onChange={this.onChange}\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                />\n              </Control>\n            </Field>\n            <Field>\n              <Label>Gender</Label>\n              <Control>\n                <Select onChange={this.onChange} name=\"gender\" value={gender}>\n                  <option value=\"\">Select</option>\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                  <option value=\"other\">Other?</option>\n                </Select>\n              </Control>\n            </Field>\n            <Field>\n              <Label>Message</Label>\n              <Control>\n                <Textarea\n                  name=\"comment\"\n                  value={comment}\n                  onChange={this.onChange}\n                  placeholder=\"Textarea\"\n                />\n              </Control>\n            </Field>\n            <Field>\n              <Label>Do you undertood how to use me?</Label>\n              <Control>\n                <Radio\n                  onChange={this.onChange}\n                  checked={question === 'Yes'}\n                  value=\"Yes\"\n                  name=\"question\"\n                >\n                  Yes\n                </Radio>\n                <Radio\n                  onChange={this.onChange}\n                  checked={question === 'No'}\n                  value=\"No\"\n                  name=\"question\"\n                >\n                  No\n                </Radio>\n              </Control>\n            </Field>\n            <Field>\n              <Control>\n                <Checkbox\n                  name=\"termsAccepted\"\n                  onChange={this.onChange}\n                  checked={termsAccepted}\n                >\n                  I agree to the <a href=\"#agree\">terms and conditions</a>\n                </Checkbox>\n              </Control>\n            </Field>\n            <pre>\n              <code>{JSON.stringify(this.state, null, 2)}</code>\n            </pre>\n          </div>\n        );\n      }\n    }\n    return <MultiInputHandler />;\n  });\n"],"file":"form.story.js"}