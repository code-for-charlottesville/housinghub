{"version":3,"sources":["../../../../src/components/form/components/input-file.js"],"names":["colors","concat","Object","keys","CONSTANTS","COLORS","map","key","InputFile","props","event","files","target","setState","filename","length","name","undefined","onChange","state","className","style","color","size","fileName","fullwidth","right","boxed","label","icon","inputProps","select","PureComponent","propTypes","modifiers","PropTypes","string","shape","func","oneOf","bool","element","accept","capture","multiple","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG,CAAC,IAAD,EAAOC,MAAP,CACbC,MAAM,CAACC,IAAP,CAAYC,sBAAUC,MAAtB,EAA8BC,GAA9B,CAAkC,UAAAC,GAAG;AAAA,SAAIH,sBAAUC,MAAV,CAAiBE,GAAjB,CAAJ;AAAA,CAArC,CADa,CAAf;;IAIqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,6DAOV,UAAAC,KAAK,EAAI;AAAA,UACRC,KADQ,GACED,KAAK,CAACE,MADR,CACRD,KADQ;;AAEhB,YAAKE,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAEH,KAAK,CAACI,MAAN,GAAe,CAAf,GAAmBJ,KAAK,CAAC,CAAD,CAAL,CAASK,IAA5B,GAAmCC;AADjC,OAAd;;AAGA,UAAI,MAAKR,KAAL,CAAWS,QAAf,EAAyB;AACvB,cAAKT,KAAL,CAAWS,QAAX,CAAoBR,KAApB;AACD;AACF,KAfkB;;AAEjB,UAAKS,KAAL,GAAa;AACXL,MAAAA,QAAQ,EAAEG;AADC,KAAb;AAFiB;AAKlB;;;;6BAYQ;AAAA;;AAAA,wBAgBH,KAAKR,KAhBF;AAAA,UAELW,SAFK,eAELA,SAFK;AAAA,UAGLC,KAHK,eAGLA,KAHK;AAAA,UAILH,QAJK,eAILA,QAJK;AAAA,UAKLI,KALK,eAKLA,KALK;AAAA,UAMLC,IANK,eAMLA,IANK;AAAA,UAOLC,QAPK,eAOLA,QAPK;AAAA,UAQLC,SARK,eAQLA,SARK;AAAA,UASLC,KATK,eASLA,KATK;AAAA,UAULC,KAVK,eAULA,KAVK;AAAA,UAWLX,IAXK,eAWLA,IAXK;AAAA,UAYLY,KAZK,eAYLA,KAZK;AAAA,UAaLC,IAbK,eAaLA,IAbK;AAAA,UAcLC,UAdK,eAcLA,UAdK;AAAA,UAeFrB,KAfE;;AAAA,UAkBCK,QAlBD,GAkBc,KAAKK,KAlBnB,CAkBCL,QAlBD;AAoBP,aACE,gCAAC,mBAAD;AACE,QAAA,KAAK,EAAEO;AADT,SAEMZ,KAFN;AAGE,QAAA,SAAS,EAAE,6BAAW,MAAX,EAAmBW,SAAnB,+DACFG,IADE,GACOA,IADP,6CAEFD,KAFE,GAEQA,KAFR,gCAGT,UAHS,EAGG,CAACE,QAHJ,gCAIT,UAJS,EAIGE,KAJH,gCAKT,UALS,EAKGC,KALH,gCAMT,cANS,EAMOF,SANP;AAHb,UAYE;AAAO,QAAA,SAAS,EAAC;AAAjB,SACE,sDACMK,UADN;AAEE,QAAA,IAAI,EAAEd,IAFR;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,SAAS,EAAC,YAJZ;AAKE,QAAA,QAAQ,EAAE,KAAKe;AALjB,SADF,EAQE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACGF,IAAI,IAAI;AAAM,QAAA,SAAS,EAAC;AAAhB,SAA6BA,IAA7B,CADX,EAEE;AAAM,QAAA,SAAS,EAAC;AAAhB,SAA8BD,KAA9B,CAFF,CARF,EAYGJ,QAAQ,IAAIV,QAAZ,IACC;AAAM,QAAA,SAAS,EAAC;AAAhB,SAA6BA,QAA7B,CAbJ,CAZF,CADF;AA+BD;;;;EArEoCkB,oB;;;AAwEvCxB,SAAS,CAACyB,SAAV,qBACKC,sBAAUD,SADf;AAEEb,EAAAA,SAAS,EAAEe,sBAAUC,MAFvB;AAGEf,EAAAA,KAAK,EAAEc,sBAAUE,KAAV,CAAgB,EAAhB,CAHT;AAIEnB,EAAAA,QAAQ,EAAEiB,sBAAUG,IAJtB;AAKEhB,EAAAA,KAAK,EAAEa,sBAAUI,KAAV,CAAgBvC,MAAhB,CALT;AAMEuB,EAAAA,IAAI,EAAEY,sBAAUI,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CANR;AAOEf,EAAAA,QAAQ,EAAEW,sBAAUK,IAPtB;AAQEf,EAAAA,SAAS,EAAEU,sBAAUK,IARvB;AASEd,EAAAA,KAAK,EAAES,sBAAUK,IATnB;AAUEb,EAAAA,KAAK,EAAEQ,sBAAUK,IAVnB;;AAWE;;;AAGAxB,EAAAA,IAAI,EAAEmB,sBAAUC,MAdlB;AAeER,EAAAA,KAAK,EAAEO,sBAAUC,MAfnB;AAgBEP,EAAAA,IAAI,EAAEM,sBAAUM,OAhBlB;AAiBEX,EAAAA,UAAU,EAAEK,sBAAUE,KAAV,CAAgB;AAC1BK,IAAAA,MAAM,EAAEP,sBAAUC,MADQ;AAE1BO,IAAAA,OAAO,EAAER,sBAAUC,MAFO;AAG1BQ,IAAAA,QAAQ,EAAET,sBAAUK;AAHM,GAAhB;AAjBd;AAwBAhC,SAAS,CAACqC,YAAV,qBACKX,sBAAUW,YADf;AAEEzB,EAAAA,SAAS,EAAEH,SAFb;AAGEI,EAAAA,KAAK,EAAEJ,SAHT;AAIEC,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CAJpB;AAKEI,EAAAA,KAAK,EAAEL,SALT;AAMEM,EAAAA,IAAI,EAAEN,SANR;AAOEO,EAAAA,QAAQ,EAAE,IAPZ;AAQEC,EAAAA,SAAS,EAAER,SARb;AASES,EAAAA,KAAK,EAAET,SATT;AAUEU,EAAAA,KAAK,EAAEV,SAVT;AAWED,EAAAA,IAAI,EAAEC,SAXR;AAYEY,EAAAA,IAAI,EAAEZ,SAZR;AAaEW,EAAAA,KAAK,EAAE,kBAbT;AAcEE,EAAAA,UAAU,EAAE;AACVY,IAAAA,MAAM,EAAEzB,SADE;AAEV0B,IAAAA,OAAO,EAAE1B,SAFC;AAGV2B,IAAAA,QAAQ,EAAE3B;AAHA;AAdd","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Element from '../../element';\nimport modifiers from '../../../modifiers';\n\nimport CONSTANTS from '../../../constants';\n\nconst colors = [null].concat(\n  Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]),\n);\n\nexport default class InputFile extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filename: undefined,\n    };\n  }\n\n  select = event => {\n    const { files } = event.target;\n    this.setState({\n      filename: files.length > 0 ? files[0].name : undefined,\n    });\n    if (this.props.onChange) {\n      this.props.onChange(event);\n    }\n  };\n\n  render() {\n    const {\n      className,\n      style,\n      onChange,\n      color,\n      size,\n      fileName,\n      fullwidth,\n      right,\n      boxed,\n      name,\n      label,\n      icon,\n      inputProps,\n      ...props\n    } = this.props;\n\n    const { filename } = this.state;\n\n    return (\n      <Element\n        style={style}\n        {...props}\n        className={classnames('file', className, {\n          [`is-${size}`]: size,\n          [`is-${color}`]: color,\n          'has-name': !fileName,\n          'is-right': right,\n          'is-boxed': boxed,\n          'is-fullwidth': fullwidth,\n        })}\n      >\n        <label className=\"file-label\">\n          <input\n            {...inputProps}\n            name={name}\n            type=\"file\"\n            className=\"file-input\"\n            onChange={this.select}\n          />\n          <span className=\"file-cta\">\n            {icon && <span className=\"file-icon\">{icon}</span>}\n            <span className=\"file-label\">{label}</span>\n          </span>\n          {fileName && filename && (\n            <span className=\"file-name\">{filename}</span>\n          )}\n        </label>\n      </Element>\n    );\n  }\n}\n\nInputFile.propTypes = {\n  ...modifiers.propTypes,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  onChange: PropTypes.func,\n  color: PropTypes.oneOf(colors),\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  fileName: PropTypes.bool,\n  fullwidth: PropTypes.bool,\n  right: PropTypes.bool,\n  boxed: PropTypes.bool,\n  /**\n   * The name of the input field Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n   */\n  name: PropTypes.string,\n  label: PropTypes.string,\n  icon: PropTypes.element,\n  inputProps: PropTypes.shape({\n    accept: PropTypes.string,\n    capture: PropTypes.string,\n    multiple: PropTypes.bool,\n  }),\n};\n\nInputFile.defaultProps = {\n  ...modifiers.defaultProps,\n  className: undefined,\n  style: undefined,\n  onChange: () => {},\n  color: undefined,\n  size: undefined,\n  fileName: true,\n  fullwidth: undefined,\n  right: undefined,\n  boxed: undefined,\n  name: undefined,\n  icon: undefined,\n  label: 'Choose a file...',\n  inputProps: {\n    accept: undefined,\n    capture: undefined,\n    multiple: undefined,\n  },\n};\n"],"file":"input-file.js"}