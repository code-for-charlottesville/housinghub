{"version":3,"sources":["../../../../src/components/form/components/input.js"],"names":["colors","concat","Object","keys","CONSTANTS","COLORS","map","key","Input","className","type","size","color","readOnly","isStatic","disabled","placeholder","value","name","props","propTypes","modifiers","PropTypes","string","style","shape","oneOf","bool","oneOfType","number","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport modifiers from '../../../modifiers';\nimport CONSTANTS from '../../../constants';\nimport Element from '../../element';\n\nconst colors = [null].concat(\n  Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]),\n);\n\nconst Input = ({\n  className,\n  type,\n  size,\n  color,\n  readOnly,\n  isStatic,\n  disabled,\n  placeholder,\n  value,\n  name,\n  ...props\n}) => (\n  <Element\n    {...props}\n    renderAs=\"input\"\n    name={name}\n    value={value}\n    type={type}\n    placeholder={placeholder}\n    readOnly={readOnly || isStatic}\n    disabled={disabled}\n    className={classnames('input', className, {\n      'is-static': isStatic,\n      [`is-${size}`]: size,\n      [`is-${color}`]: color,\n    })}\n  />\n);\n\nInput.propTypes = {\n  ...modifiers.propTypes,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  type: PropTypes.oneOf([\n    'text',\n    'email',\n    'tel',\n    'password',\n    'number',\n    'search',\n    'color',\n    'date',\n    'time',\n    'datetime-local',\n  ]),\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  color: PropTypes.oneOf(colors),\n  readOnly: PropTypes.bool,\n  isStatic: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * The name of the input field Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n   */\n  name: PropTypes.string,\n};\n\nInput.defaultProps = {\n  ...modifiers.defaultProps,\n  className: undefined,\n  value: '',\n  style: undefined,\n  type: 'text',\n  size: undefined,\n  color: undefined,\n  readOnly: false,\n  isStatic: false,\n  disabled: false,\n  placeholder: '',\n  name: undefined,\n};\n\nexport default Input;\n"],"file":"input.js"}