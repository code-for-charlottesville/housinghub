{"version":3,"sources":["../../../src/components/columns/columns.js"],"names":["breakpoints","concat","Object","keys","CONSTANTS","BREAKPOINTS","map","key","sizes","Columns","className","breakpoint","gapless","multiline","centered","vCentered","variableGap","props","length","touch","mobile","tablet","desktop","widescreen","fullhd","Column","COLUMN_CONSTANTS","propTypes","modifiers","children","PropTypes","node","string","style","shape","values","reduce","oneOf","bool","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CONSTANTS from '../../constants';\nimport Column from './components/column';\nimport COLUMN_CONSTANTS from './constants';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\n\nconst breakpoints = [null].concat(\n  Object.keys(CONSTANTS.BREAKPOINTS).map(key => CONSTANTS.BREAKPOINTS[key]),\n);\n\nconst sizes = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\nconst Columns = ({\n  className,\n  breakpoint,\n  gapless,\n  multiline,\n  centered,\n  vCentered,\n  variableGap,\n  ...props\n}) => (\n  <Element\n    {...props}\n    className={classNames(className, 'columns', {\n      [`is-${breakpoint}`]: breakpoint,\n      'is-gapless': gapless,\n      'is-multiline': multiline,\n      'is-centered': centered,\n      'is-vcentered': vCentered,\n      'is-variable': Object.keys(variableGap).length > 0,\n      ...(variableGap\n        ? {\n            [`is-${variableGap.touch}-touch`]: variableGap.touch,\n            [`is-${variableGap.mobile}-mobile`]: variableGap.mobile,\n            [`is-${variableGap.tablet}-tablet`]: variableGap.tablet,\n            [`is-${variableGap.desktop}-desktop`]: variableGap.desktop,\n            [`is-${variableGap.widescreen}-widescreen`]: variableGap.widescreen,\n            [`is-${variableGap.fullhd}-fullhd`]: variableGap.fullhd,\n          }\n        : {}),\n    })}\n  />\n);\n\nColumns.Column = Column;\n\nColumns.CONSTANTS = COLUMN_CONSTANTS;\n\nColumns.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  variableGap: PropTypes.shape({\n    ...Object.values(CONSTANTS.BREAKPOINTS).reduce(\n      (values, breakpoint) => ({\n        ...values,\n        [breakpoint]: PropTypes.oneOf(sizes),\n      }),\n      {},\n    ),\n  }),\n  /**\n   * Breakpoint where columns become stacked.\n   */\n  breakpoint: PropTypes.oneOf(breakpoints),\n  /**\n   * `true` to remove space between columns\n   */\n  gapless: PropTypes.bool,\n  /**\n   * `true` if you want to use more than one line if you add more column elements that would fit in a single row.\n   */\n  multiline: PropTypes.bool,\n  /**\n   * `true` you want the columns inside to be horizontaly centered\n   */\n  centered: PropTypes.bool,\n  /**\n   * `true` if you want to vertically align columns\n   */\n  vCentered: PropTypes.bool,\n};\n\nColumns.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: undefined,\n  style: undefined,\n  breakpoint: undefined,\n  gapless: false,\n  centered: false,\n  vCentered: false,\n  multiline: true,\n  variableGap: {},\n};\n\nexport default Columns;\n"],"file":"columns.js"}