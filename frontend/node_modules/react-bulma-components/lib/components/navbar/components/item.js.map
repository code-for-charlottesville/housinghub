{"version":3,"sources":["../../../../src/components/navbar/components/item.js"],"names":["NavbarItem","className","active","children","dropdown","dropdownUp","hoverable","renderAs","arrowless","props","as","propTypes","modifiers","style","PropTypes","shape","string","bool","node","renderAsShape","defaultProps","undefined"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,OAUb;AAAA,MATJC,SASI,QATJA,SASI;AAAA,MARJC,MAQI,QARJA,MAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,UAKI,QALJA,UAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADDC,KACC;;AACJ,MAAIC,EAAE,GAAGH,QAAT;;AACA,MAAIH,QAAQ,IAAIG,QAAQ,KAAK,GAA7B,EAAkC;AAChCG,IAAAA,EAAE,GAAG,MAAL;AACD;;AACD,SACE,gCAAC,mBAAD,eACMD,KADN;AAEE,IAAA,QAAQ,EAAEC,EAFZ;AAGE,IAAA,SAAS,EAAE,4BAAW,aAAX,EAA0BT,SAA1B,EAAqC;AAC9C,mBAAaC,MADiC;AAE9C,sBAAgBE,QAF8B;AAG9C,sBAAgBE,SAH8B;AAI9C,yBAAmBD,UAJ2B;AAK9C,sBAAgBG;AAL8B,KAArC;AAHb,MAWGL,QAXH,CADF;AAeD,CA9BD;;AAgCAH,UAAU,CAACW,SAAX,qBACKC,sBAAUD,SADf;AAEEE,EAAAA,KAAK,EAAEC,sBAAUC,KAAV,CAAgB,EAAhB,CAFT;AAGEd,EAAAA,SAAS,EAAEa,sBAAUE,MAHvB;AAIEd,EAAAA,MAAM,EAAEY,sBAAUG,IAJpB;AAKEb,EAAAA,QAAQ,EAAEU,sBAAUG,IALtB;AAMEZ,EAAAA,UAAU,EAAES,sBAAUG,IANxB;AAOEX,EAAAA,SAAS,EAAEQ,sBAAUG,IAPvB;AAQEd,EAAAA,QAAQ,EAAEW,sBAAUI,IARtB;AASEV,EAAAA,SAAS,EAAEM,sBAAUG,IATvB;AAUEV,EAAAA,QAAQ,EAAEY;AAVZ;AAaAnB,UAAU,CAACoB,YAAX,qBACKR,sBAAUQ,YADf;AAEEP,EAAAA,KAAK,EAAEQ,SAFT;AAGEpB,EAAAA,SAAS,EAAEoB,SAHb;AAIEnB,EAAAA,MAAM,EAAEmB,SAJV;AAKElB,EAAAA,QAAQ,EAAE,IALZ;AAMEC,EAAAA,QAAQ,EAAEiB,SANZ;AAOEf,EAAAA,SAAS,EAAEe,SAPb;AAQEhB,EAAAA,UAAU,EAAEgB,SARd;AASEb,EAAAA,SAAS,EAAEa,SATb;AAUEd,EAAAA,QAAQ,EAAE;AAVZ;eAaeP,U","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport modifiers from '../../../modifiers';\nimport Element from '../../element';\nimport renderAsShape from '../../../modifiers/render-as';\n\nconst NavbarItem = ({\n  className,\n  active,\n  children,\n  dropdown,\n  dropdownUp,\n  hoverable,\n  renderAs,\n  arrowless,\n  ...props\n}) => {\n  let as = renderAs;\n  if (dropdown && renderAs === 'a') {\n    as = 'span';\n  }\n  return (\n    <Element\n      {...props}\n      renderAs={as}\n      className={classnames('navbar-item', className, {\n        'is-active': active,\n        'has-dropdown': dropdown,\n        'is-hoverable': hoverable,\n        'has-dropdown-up': dropdownUp,\n        'is-arrowless': arrowless,\n      })}\n    >\n      {children}\n    </Element>\n  );\n};\n\nNavbarItem.propTypes = {\n  ...modifiers.propTypes,\n  style: PropTypes.shape({}),\n  className: PropTypes.string,\n  active: PropTypes.bool,\n  dropdown: PropTypes.bool,\n  dropdownUp: PropTypes.bool,\n  hoverable: PropTypes.bool,\n  children: PropTypes.node,\n  arrowless: PropTypes.bool,\n  renderAs: renderAsShape,\n};\n\nNavbarItem.defaultProps = {\n  ...modifiers.defaultProps,\n  style: undefined,\n  className: undefined,\n  active: undefined,\n  children: null,\n  dropdown: undefined,\n  hoverable: undefined,\n  dropdownUp: undefined,\n  arrowless: undefined,\n  renderAs: 'a',\n};\n\nexport default NavbarItem;\n"],"file":"item.js"}