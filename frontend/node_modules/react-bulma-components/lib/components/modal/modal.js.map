{"version":3,"sources":["../../../src/components/modal/modal.js"],"names":["KEYCODES","ESCAPE","Modal","props","document","e","keyCode","show","onClose","state","closeOnEsc","doc","getDocument","portalElement","createElement","setAttribute","body","appendChild","addEventListener","handleKeydown","forceUpdate","removeEventListener","parentNode","removeChild","domRef","closeOnBlur","className","children","isCard","React","Children","only","type","toString","indexOf","showClose","cloneElement","ReactDOM","createPortal","undefined","PureComponent","Content","ModalContent","Card","ModalCard","propTypes","PropTypes","bool","isRequired","func","node","object","string","defaultProps","createRef"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport ModalContent from './components/content';\nimport ModalCard from './components/card';\n\nconst KEYCODES = {\n  ESCAPE: 27,\n};\n\nclass Modal extends PureComponent {\n  portalElement = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { closeOnEsc } = this.props;\n\n    const doc = this.getDocument();\n    this.portalElement = doc.createElement('div');\n    this.portalElement.setAttribute('class', 'modal-container');\n    doc.body.appendChild(this.portalElement);\n    // eslint-disable-next-line\n    if (closeOnEsc) {\n      doc.addEventListener('keydown', this.handleKeydown);\n    }\n    this.forceUpdate();\n  }\n\n  componentWillUnmount() {\n    const doc = this.getDocument();\n    const { closeOnEsc } = this.props;\n    if (closeOnEsc && doc) {\n      doc.removeEventListener('keydown', this.handleKeydown);\n    }\n    // IE11 fix\n    this.portalElement.parentNode.removeChild(this.portalElement);\n  }\n\n  getDocument = () => {\n    if (this.props.document) {\n      return this.props.document;\n    }\n\n    if (typeof document !== 'undefined') {\n      return document;\n    }\n\n    return null;\n  };\n\n  handleKeydown = e => {\n    if (e.keyCode === KEYCODES.ESCAPE && this.props.show) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { domRef, closeOnBlur, show, className } = this.props;\n    if (!this.getDocument() || !this.portalElement || !show) {\n      return null;\n    }\n    let { children } = this.props;\n    let isCard;\n    try {\n      isCard =\n        React.Children.only(children)\n          .type.toString()\n          .indexOf('ModalCard') !== -1;\n    } catch (e) {\n      isCard = false;\n    }\n\n    const showClose = !isCard && this.props.showClose;\n\n    if (isCard) {\n      children = React.cloneElement(children, {\n        onClose: this.props.onClose,\n      });\n    }\n\n    return ReactDOM.createPortal(\n      <div\n        ref={domRef}\n        className={classnames('modal', className, {\n          'is-active': show,\n        })}\n      >\n        <div\n          role=\"presentation\"\n          className=\"modal-background\"\n          onClick={closeOnBlur ? this.props.onClose : undefined}\n        />\n        {children}\n        {showClose && (\n          <button\n            type=\"button\"\n            onClick={this.props.onClose}\n            className=\"modal-close is-large\"\n            aria-label=\"close\"\n          />\n        )}\n      </div>,\n      this.portalElement,\n    );\n  }\n}\n\nModal.Content = ModalContent;\nModal.Card = ModalCard;\n\nModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  closeOnEsc: PropTypes.bool,\n  closeOnBlur: PropTypes.bool,\n  showClose: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  document: PropTypes.object,\n  className: PropTypes.string,\n  domRef: PropTypes.object,\n};\n\nModal.defaultProps = {\n  closeOnEsc: true,\n  showClose: true,\n  closeOnBlur: false,\n  className: undefined,\n  domRef: React.createRef(),\n  // Expose mount point for testing\n  document: undefined,\n};\n\nexport default Modal;\n"],"file":"modal.js"}